@model DriverInfo

@{
    ViewData["Title"] = "Update Status";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var userId = Context.Session.GetInt32("user_id");
}

@await Html.PartialAsync("Breadcrumb", (List<Tuple<string, string>>)ViewBag.Breadcrumbs)

<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-body">
                <div class="container text-center mt-5">
                    <h1 class="display-5">Update Driver Status</h1>

                    @if (@ViewBag.IsActive)
                    {
                        <p class="lead">You are currently active. Click the button below to go inactive.</p>

                        <form method="post" asp-controller="Driver" asp-action="DeactivateDriver">
                            <input type="hidden" name="userId" value="@userId" />
                            <button type="submit" id="deactivateButton" class="btn btn-lg btn-danger">
                                Go Inactive
                            </button>
                        </form>
                    }
                    else
                    {
                        <p class="lead">You are currently inactive. Click the button below to go active and start live tracking.</p>

                        <form method="post" asp-controller="Driver" asp-action="ActivateDriver">
                            <input type="hidden" name="userId" value="@userId" />
                            <button type="submit" id="activateButton" class="btn btn-lg btn-success">
                                Go Active
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Load SignalR JavaScript library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>

<script>
    // Ensure driverId is available from the model
    var driverId = @Model.DriverId;

    document.addEventListener('DOMContentLoaded', function () {
        // SignalR connection setup
        var connection = new signalR.HubConnectionBuilder().withUrl("/driverLocationHub").build();

        connection.start().then(function () {
            console.log("SignalR connection established");

            // Geolocation watch
            if (navigator.geolocation) {
                navigator.geolocation.watchPosition(function (position) {
                    var latitude = position.coords.latitude;
                    var longitude = position.coords.longitude;

                    console.log("Sending location update:", latitude, longitude);

                    // Ensure SignalR connection is established before sending data
                    connection.invoke("SendLocationUpdate", driverId, latitude, longitude).catch(function (err) {
                        console.error(err.toString());
                    });
                }, function (error) {
                    console.error("Error fetching location: " + error.message);
                }, {
                    enableHighAccuracy: true,
                    maximumAge: 0,
                    timeout: 5000
                });
            } else {
                console.error("Geolocation is not supported by this browser.");
            }

        }).catch(function (err) {
            return console.error(err.toString());
        });
    });
</script>
